@import "../../css/config.less";

job-cube {
  width: @tile-size;
  height: @tile-size;
  position: relative;
  display: inline-flex;
  margin: @margin;
}

.bigger {
  font-size: large;
}

.smaller {
  font-size: smaller;
}

.align-bottom {
  position: absolute;
  bottom: 4px;
}

#cube {
  width: 100%;
  height: 100%;
  position: absolute;
    
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  -o-transform-style: preserve-3d;
  transform-style: preserve-3d;
  
  -webkit-transition: -webkit-transform 1s;
  -moz-transition: -moz-transform 1s;
  -o-transition: -o-transform 1s;
  transition: transform 1s translate 1s background-color 0.5s;
  
  transition-timing-function: ease-out;
  
    &[status^='blue'] .face {
      background-color: @status-blue;
    }
    
    &[status^='red'] .face {
      background-color: @status-red;
    }
    
    &[status^='yellow'] .face {
      background-color: @status-yellow;
    }
    
    &[status^='aborted'] .face {
      background-color: @status-aborted;
    }
    
    &[status$='anime'] .face {
      background-color: @status-building;
    }
      
  .face {
    overflow: hidden;
    color: white;
    
    display: block;
    padding: @padding;
    
    position: absolute;
    width: @tile-size;
    height: @tile-size;
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -o-backface-visibility: hidden;
    backface-visibility: hidden;
    background-color: @status-disabled;    
    z-index: 100;
    transition: opacity 1s ease-out;
    opacity: 0;
  }
      
  .timestamp {    
    position: absolute;
    bottom: 4px;
  }
  
  .build-number {
    position: absolute;
    bottom: 1px;
    right: 4px;
    opacity: 0.5;
  }
  
  .build-progress {    
    font-size: @font-size * 3;
    text-align: center;
  }
    
  .front  {
    -webkit-transform: translateZ( @tile-size / 2 );
    -moz-transform: translateZ( @tile-size / 2 );
    -o-transform: translateZ( @tile-size / 2 );
    transform: translateZ( @tile-size / 2 );    
  }
  
  .back   {
    -webkit-transform: rotateX( -180deg ) translateZ( @tile-size / 2 );
    -moz-transform: rotateX( -180deg ) translateZ( @tile-size / 2 );
    -o-transform: rotateX( -180deg ) translateZ( @tile-size / 2 );
    transform: rotateX( -180deg ) translateZ( @tile-size / 2 );
    background-image: url('http://www.sonarqube.org/wp-content/uploads/2014/03/inspected-with-SQ-64.jpg');  
    background-position: bottom;
    background-repeat: no-repeat;
    background-size: @tile-size;
    .align-bottom {
      bottom: 58px;
      right: 4px;
    }  
  }
  .right {
    -webkit-transform: rotateY(   90deg ) translateZ( @tile-size / 2 );
    -moz-transform: rotateY(   90deg ) translateZ( @tile-size / 2 );
    -o-transform: rotateY(   90deg ) translateZ( @tile-size / 2 );
    transform: rotateY(   90deg ) translateZ( @tile-size / 2 );
  }
  .left {
    -webkit-transform: rotateY(  -90deg ) translateZ( @tile-size / 2 );
    -moz-transform: rotateY(  -90deg ) translateZ( @tile-size / 2 );
    -o-transform: rotateY(  -90deg ) translateZ( @tile-size / 2 );
    transform: rotateY(  -90deg ) translateZ( @tile-size / 2 );
  }
  .top {
    -webkit-transform: rotateX(   90deg ) translateZ( @tile-size / 2 );
    -moz-transform: rotateX(   90deg ) translateZ( @tile-size / 2 );
    -o-transform: rotateX(   90deg ) translateZ( @tile-size / 2 );
    transform: rotateX(   90deg ) translateZ( @tile-size / 2 );
  }
  .bottom {
    -webkit-transform: rotateX(  -90deg ) translateZ( @tile-size / 2 );
    -moz-transform: rotateX(  -90deg ) translateZ( @tile-size / 2 );
    -o-transform: rotateX(  -90deg ) translateZ( @tile-size / 2 );
    transform: rotateX(  -90deg ) translateZ( @tile-size / 2 );    
    
    background-image: url('https://git-scm.com/images/logos/downloads/Git-Logo-White.png');  
    background-position: bottom right;
    background-repeat: no-repeat;
    background-size: 48px;
  }
  
  &[show='front'] {
    -webkit-transform: translateZ( @tile-size / -2 );
    -moz-transform: translateZ( @tile-size / -2 );
    -o-transform: translateZ( @tile-size / -2 );
    transform: translateZ( @tile-size / -2 );
    z-index: -100;
    
    .front {
      opacity: 1.0 !important;
    }
  }
  
  &[show='back']{
    -webkit-transform: translateZ( @tile-size / -2 ) rotateX( 180deg );
    -moz-transform: translateZ( @tile-size / -2 ) rotateX( 180deg );
    -o-transform: translateZ( @tile-size / -2 ) rotateX( 180deg );
    transform: translateZ( @tile-size / -2 ) rotateX( 180deg );
    z-index: -100;
    
    .back {
      opacity: 1.0 !important;
    }
  }
  
  &[show='right'] {
    -webkit-transform: translateZ( @tile-size / -2 ) rotateY(  -90deg );
    -moz-transform: translateZ( @tile-size / -2 ) rotateY(  -90deg );
    -o-transform: translateZ( @tile-size / -2 ) rotateY(  -90deg );
    transform: translateZ( @tile-size / -2 ) rotateY(  -90deg );
    z-index: -100;
    
    .right {
      opacity: 1.0 !important;
    }
  }
  
  &[show='left'] {
    -webkit-transform: translateZ( @tile-size / -2 ) rotateY(   90deg );
    -moz-transform: translateZ( @tile-size / -2 ) rotateY(   90deg );
    -o-transform: translateZ( @tile-size / -2 ) rotateY(   90deg );
    transform: translateZ( @tile-size / -2 ) rotateY(   90deg );
    z-index: -100;
    
    .left {
      opacity: 1.0 !important;
    }
  }
  
  &[show='top'] {
    -webkit-transform: translateZ( @tile-size / -2 ) rotateX(  270deg );
    -moz-transform: translateZ( @tile-size / -2 ) rotateX(  270deg );
    -o-transform: translateZ( @tile-size / -2 ) rotateX(  270deg );
    transform: translateZ( @tile-size / -2 ) rotateX(  270deg );
    z-index: -100;
    
    .top {
      opacity: 1.0 !important;
    }
  }
  
  &[show='bottom'] {
    -webkit-transform: translateZ( @tile-size / -2 ) rotateX(   90deg );
    -moz-transform: translateZ( @tile-size / -2 ) rotateX(   90deg );
    -o-transform: translateZ( @tile-size / -2 ) rotateX(   90deg );
    transform: translateZ( @tile-size / -2 ) rotateX(   90deg );
    z-index: -100;
    
    .bottom {
      opacity: 1.0 !important;
    }
  }
  
  @keyframes rotate {
    from {
      transform: translateZ( @tile-size  / -2 ) rotateX(0) rotateY(0) rotateZ(0);
    }
  
    to {
      transform: translateZ( @tile-size  / -2 ) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
    }
  }
  
  &[show='spin'] {
    .face {
      opacity: 1.0 !important;
    }
    z-index: -10;
    animation: rotate 20s infinite linear;
    transition-timing-function: linear !important;
  }  
}